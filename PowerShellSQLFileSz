#
# Script to load all SQL servers settings into database
#
#Test Servers
$file = get-content C:\Scripts\SQL_Servers_SM.txt

#Production Servers
#$file = get-content C:\Scripts\Production_SQL.txt


foreach ($inst in $file)
{

Size_DBs -server $inst
}


Function Size_DBs ($server)
{
    if (-not(Get-Module -Name SQLPS)) {
    if (Get-Module -ListAvailable -Name SQLPS) {
        Push-Location
        Import-Module -Name SQLPS -DisableNameChecking
        Pop-Location
    }
}

$SQLQuery = "
declare @GB    float
declare @MB    float
declare @KB    float
declare @B     float

set @GB   =  (cast(8192 as float) / cast(1073741824 as float))
set @MB   =  (cast(8192 as float) / cast(1048576 as float))
set @KB   =  (cast(8192 as float) / cast(1024 as float))
set @B    =  (cast(8192 as float))

Insert into BMGTest.dbo.Logging_Sizes(
 Server_name,
 DB_Name,
 File_Name,
 DB_Growth,
 DatabaseSize,
 File_Growth,
 File_Growth_Size_in_MB,
 AutoGrowth)

	select '" + $server + "' Server_name, b.name DB_Name, a.filename File_Name,
	(case when a.growth > 100                  
				then (case when (cast(a.growth as float) * @GB) > (cast(1 as float))
						   then (convert(varchar(16),(cast(a.growth as float) * @GB)) +  ' GB')
						   else (case when (cast(a.growth as float) * @MB) > (cast(1 as float))
									  then  (convert(varchar(16),(cast(a.growth as float) * @MB)) + ' MB')
									  else (case when (cast(a.growth as float) * @KB) > (cast(1 as float))
												 then (convert(varchar(16),(cast(a.growth as float) * @KB)) + ' KB')
												 else ((convert(varchar(16),(cast(a.growth as float) * @B))) + ' Bytes')
											end)
								 end)
					  end)
				when a.growth < 100
				then (case a.growth
						   when 0 then 'N/A'
						   else (convert(varchar(16),(cast(a.growth as float))) + ' %')
					  end)
				else ''
		   end) as Growth,
	cast((a.size * 8.00) / 1024 as numeric(12,2)) as DB_Size_in_MB,
	case when a.growth > 100 then 'In MB' else 'In Percentage' end File_Growth,
	cast(case when a.growth > 100 then (a.growth * 8.00) / 1024
	else (((a.size * a.growth) / 100) * 8.00) / 1024
	end as numeric(12,2)) File_Growth_Size_in_MB,
	case when ( maxsize = -1 or maxsize=268435456 ) then 'AutoGrowth Not Limited' else 'AutoGrowth Limited' end AutoGrowth_Status
	from master.dbo.sysaltfiles a
	join master.dbo.sysdatabases b on a.dbid = b.dbid
	where DATABASEPROPERTYEX(b.name, 'status') = 'ONLINE'
	order by b.name"


    $Datatable = New-Object System.Data.DataTable
    
    $Connection = New-Object System.Data.SQLClient.SQLConnection
    $Connection.ConnectionString = "server='$Server';database='$Database';trusted_connection=true;"
    $Connection.Open()
    $Command = New-Object System.Data.SQLClient.SQLCommand
    $Command.Connection = $Connection
    $Command.CommandText = $SQLQuery
    $Reader = $Command.ExecuteReader()
    $Datatable.Load($Reader)
    $Connection.Close()
    
    return $Datatable  

}
 


# -smo "C:\Program Files\Microsoft SQL Server\100\SDK\Assemblies\Microsoft.SqlServer.Smo.dll"
